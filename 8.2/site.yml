---
- name: Gather facts
  hosts: all
  tags: always
  gather_facts: false
  tasks:
    - name: Gather minimal facts
      setup:

- name: Install Java
  hosts: all
  gather_facts: false
  tasks:
    - name: Upload .tar.gz file containing binaries from local storage
      tags:
        - java
      ansible.builtin.copy:
        src: "{{ java_oracle_jdk_package }}"
        dest: "/tmp/{{ java_oracle_jdk_package }}"
        mode: "0755"
      register: upload_java
      until: upload_java is succeeded

    - name: Ensure installation dir exists
      tags:
        - java
      become: true
      ansible.builtin.file:
        state: directory
        path: "{{ java_home }}"
        mode: "0755"

    - name: Extract java in the installation directory
      tags:
        - java
      become: true
      ansible.builtin.unarchive:
        copy: false
        src: "/tmp/{{ java_oracle_jdk_package }}"
        dest: "{{ java_home }}"
        mode: "0755"
        extra_opts:
          - --strip-components=1
        creates: "{{ java_home }}/bin/java"

    - name: Export environment variables
      tags:
        - java
      become: true
      ansible.builtin.template:
        src: jdk.sh.j2
        dest: /etc/profile.d/jdk.sh
        mode: "0755"

- name: Install Elasticsearch
  hosts: elasticsearch
  gather_facts: false
  tasks:
    - name: Download tar.gz Elasticsearch from remote URL
      tags:
        - elastic
      delegate_to: localhost
      run_once: true
      ansible.builtin.get_url:
        url: "{{ elastic_url }}"
        dest: "{{ playbook_dir }}/files/{{ elastic_package }}"
        mode: "0755"
        timeout: 60
        validate_certs: false
      register: get_elastic
      until: get_elastic is succeeded

    - name: Upload .tar.gz file containing binaries from local storage
      tags:
        - elastic
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/files/{{ elastic_package }}"
        dest: "/tmp/{{ elastic_package }}"
        mode: "0755"
      register: upload_elastic
      until: upload_elastic is succeeded

    - name: Create directrory for Elasticsearch
      tags:
        - elastic
      file:
        state: directory
        path: "{{ elastic_home }}"
        mode: "0755"

    - name: Extract Elasticsearch in the installation directory
      tags:
        - elastic
      become: true
      unarchive:
        copy: false
        src: "/tmp/{{ elastic_package }}"
        dest: "{{ elastic_home }}"
        extra_opts:
          - --strip-components=1
        creates: "{{ elastic_home }}/bin/elasticsearch"

    - name: Set environment Elastic
      tags:
        - elastic
      become: true
      template:
        src: templates/elk.sh.j2
        dest: /etc/profile.d/elk.sh
        mode: "0755"

- name: Install Kibana
  hosts: kibana
  gather_facts: false
  tasks:
    - name: Download tar.gz Kibana from remote URL
      tags:
        - kibana
      delegate_to: localhost
      run_once: true
      ansible.builtin.get_url:
        url: "{{ kibana_url }}"
        dest: "{{ playbook_dir }}/files/{{ kibana_package }}"
        mode: "0755"
        timeout: 60
        validate_certs: false
      register: get_kibana
      until: get_kibana is succeeded

    - name: Upload .tar.gz file containing binaries from local storage
      tags:
        - kibana
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/files/{{ kibana_package }}"
        dest: "/tmp/{{ kibana_package }}"
        mode: "0755"
      register: upload_kibana
      until: upload_kibana is succeeded

    - name: Create directrory for Kibana
      tags:
        - kibana
      file:
        state: directory
        path: "{{ kibana_home }}"
        mode: "0755"

    - name: Extract Kibana in the installation directory
      tags:
        - kibana
      become: true
      unarchive:
        copy: false
        src: "/tmp/{{ kibana_package }}"
        dest: "{{ kibana_home }}"
        extra_opts:
          - --strip-components=1
        creates: "{{ kibana_home }}/bin/kibana"

    - name: Set config Kibana
      tags:
        - kibana
      become: true
      template:
        src: templates/kibana.yml.j2
        dest: "{{ kibana_home }}/config/kibana.yml"
        mode: "0755"

    - name: Set environment Kibana
      tags:
        - kibana
      become: true
      template:
        src: templates/kbn.sh.j2
        dest: /etc/profile.d/kbn.sh
        mode: "0755"
